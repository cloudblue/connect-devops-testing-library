name: Connect DevOps Testing Library Tests

on:
  push:
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.8 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Linting
        run: |
          poetry run flake8
      - name: Testing
        run: |
          poetry run pytest
      - name: Fix coverage.xml for Sonar
        run: |
          sed -i 's/\/home\/runner\/work\/connect-cli\/connect-devops-testing-library\//\/github\/workspace\//g' coverage.xml
      - name: SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Wait sonar to process report
        uses: jakejarvis/wait-action@master
        with:
          time: '60s'
      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Extract tag name
        uses: actions/github-script@v3
        id: tag
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            return context.payload.ref.replace(/refs\/tags\//, '')
      - name: Build and publish to pypi.org
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          poetry version ${{ steps.tag.outputs.result }}
          poetry build
          poetry publish -u $TWINE_USERNAME -p $TWINE_PASSWORD